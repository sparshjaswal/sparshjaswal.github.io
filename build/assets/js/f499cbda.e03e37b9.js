"use strict";(globalThis.webpackChunka=globalThis.webpackChunka||[]).push([[1849],{5479:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"dsa-key-pattern/Greedy","title":"Greedy","description":"Description","source":"@site/docs/dsa-key-pattern/21-Greedy.md","sourceDirName":"dsa-key-pattern","slug":"/dsa-key-pattern/Greedy","permalink":"/docs/dsa-key-pattern/Greedy","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":21,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Graphs","permalink":"/docs/dsa-key-pattern/Graphs"},"next":{"title":"Design Data Structure","permalink":"/docs/dsa-key-pattern/Design-Data-Structure"}}');var s=i(4848),r=i(8453);const t={},o="Greedy",c={},d=[{value:"Description",id:"description",level:2},{value:"Time Complexity",id:"time-complexity",level:2},{value:"Space Complexity",id:"space-complexity",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Key Problems",id:"key-problems",level:2},{value:"When to Use",id:"when-to-use",level:2},{value:"Pattern Recognition",id:"pattern-recognition",level:2},{value:"Common Greedy Strategies",id:"common-greedy-strategies",level:2},{value:"Activity Selection",id:"activity-selection",level:3},{value:"Interval Scheduling",id:"interval-scheduling",level:3},{value:"Fractional Knapsack",id:"fractional-knapsack",level:3},{value:"Huffman Coding",id:"huffman-coding",level:3},{value:"Proving Greedy Works",id:"proving-greedy-works",level:2},{value:"When Greedy Fails",id:"when-greedy-fails",level:2}];function a(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"greedy",children:"Greedy"})}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Greedy algorithms make local optimal choices at each step, which lead to a global optimal solution for problems like scheduling and resource allocation."}),"\n",(0,s.jsx)(n.h2,{id:"time-complexity",children:"Time Complexity"}),"\n",(0,s.jsx)(n.p,{children:"O(n log n) typically due to sorting"}),"\n",(0,s.jsx)(n.h2,{id:"space-complexity",children:"Space Complexity"}),"\n",(0,s.jsx)(n.p,{children:"O(1) to O(n)"}),"\n",(0,s.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Local Optimal Choice"}),": Make the best choice at each step"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Greedy Choice Property"}),": Local optimal choices lead to global optimum"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No Backtracking"}),": Once a choice is made, it's never reconsidered"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sorting Often Required"}),": Many greedy problems require initial sorting"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"key-problems",children:"Key Problems"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Jump Game II"}),"\n",(0,s.jsx)(n.li,{children:"Gas Station"}),"\n",(0,s.jsx)(n.li,{children:"Bag of Tokens"}),"\n",(0,s.jsx)(n.li,{children:"Boats to Save People"}),"\n",(0,s.jsx)(n.li,{children:"Wiggle Subsequence"}),"\n",(0,s.jsx)(n.li,{children:"Car Pooling"}),"\n",(0,s.jsx)(n.li,{children:"Candy"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/discuss/post/669996/greedy-for-beginners-problems-sample-sol-rf7c/",children:"https://leetcode.com/discuss/post/669996/greedy-for-beginners-problems-sample-sol-rf7c/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/discuss/post/3972722/top-greedy-questions-helpful-for-oa-and-17zbd/",children:"https://leetcode.com/discuss/post/3972722/top-greedy-questions-helpful-for-oa-and-17zbd/"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Optimization problems where greedy choice leads to optimal solution"}),"\n",(0,s.jsx)(n.li,{children:"Scheduling and resource allocation problems"}),"\n",(0,s.jsx)(n.li,{children:"Problems where you can prove greedy approach works"}),"\n",(0,s.jsx)(n.li,{children:"When optimal substructure and greedy choice properties hold"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pattern-recognition",children:"Pattern Recognition"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'"Minimum/maximum number of..."'}),"\n",(0,s.jsx)(n.li,{children:'"Optimal scheduling/allocation"'}),"\n",(0,s.jsx)(n.li,{children:'"Interval scheduling problems"'}),"\n",(0,s.jsx)(n.li,{children:'"Activity selection problems"'}),"\n",(0,s.jsx)(n.li,{children:"Problems where local best choice seems to work"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-greedy-strategies",children:"Common Greedy Strategies"}),"\n",(0,s.jsx)(n.h3,{id:"activity-selection",children:"Activity Selection"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sort by end time"}),"\n",(0,s.jsx)(n.li,{children:"Select activity that ends earliest and doesn't conflict"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"interval-scheduling",children:"Interval Scheduling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sort intervals by start/end time"}),"\n",(0,s.jsx)(n.li,{children:"Greedily select non-overlapping intervals"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"fractional-knapsack",children:"Fractional Knapsack"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sort by value-to-weight ratio"}),"\n",(0,s.jsx)(n.li,{children:"Take items in order of ratio"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"huffman-coding",children:"Huffman Coding"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Build optimal prefix-free codes"}),"\n",(0,s.jsx)(n.li,{children:"Always merge two least frequent nodes"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"proving-greedy-works",children:"Proving Greedy Works"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Greedy Choice Property"}),": Show that local optimal choice leads to global optimum"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Optimal Substructure"}),": Show that optimal solution contains optimal solutions to subproblems"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Exchange Argument"}),": Show that any optimal solution can be transformed to greedy solution"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"when-greedy-fails",children:"When Greedy Fails"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"0/1 Knapsack (need DP)"}),"\n",(0,s.jsx)(n.li,{children:"Longest Path in general graphs"}),"\n",(0,s.jsx)(n.li,{children:"Graph coloring with minimum colors"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var l=i(6540);const s={},r=l.createContext(s);function t(e){const n=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);