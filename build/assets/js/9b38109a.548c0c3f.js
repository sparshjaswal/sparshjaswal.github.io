"use strict";(globalThis.webpackChunka=globalThis.webpackChunka||[]).push([[1210],{6063:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"javascript/keyword","title":"\ud83d\udd11 Chapter 3: Keywords and Identifiers in JavaScript","description":"\ud83d\udcdd Understanding Identifiers","source":"@site/docs/javascript/keyword.md","sourceDirName":"javascript","slug":"/javascript/keyword","permalink":"/docs/javascript/keyword","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\ude80 Modern JavaScript Best Practices & Performance Guide","permalink":"/docs/javascript/js-best-practices"},"next":{"title":"Loop","permalink":"/docs/javascript/loops"}}');var d=s(4848),i=s(8453);const c={},l="\ud83d\udd11 Chapter 3: Keywords and Identifiers in JavaScript",t={},a=[{value:"\ud83d\udcdd Understanding Identifiers",id:"-understanding-identifiers",level:2},{value:"\ud83c\udfaf What Makes a Valid Identifier?",id:"-what-makes-a-valid-identifier",level:3},{value:"\u2705 Valid Rules",id:"-valid-rules",level:4},{value:"\u274c Invalid Examples",id:"-invalid-examples",level:4},{value:"\u2705 Valid Examples",id:"-valid-examples",level:4},{value:"\ud83c\udfa8 Naming Conventions",id:"-naming-conventions",level:3},{value:"\ud83d\udc2a camelCase (Recommended for variables and functions)",id:"-camelcase-recommended-for-variables-and-functions",level:4},{value:"\ud83c\udfdb\ufe0f PascalCase (Recommended for classes and constructors)",id:"\ufe0f-pascalcase-recommended-for-classes-and-constructors",level:4},{value:"\ud83d\udd24 UPPER_SNAKE_CASE (Recommended for constants)",id:"-upper_snake_case-recommended-for-constants",level:4},{value:"\ud83d\udc0d snake_case (Less common in JavaScript)",id:"-snake_case-less-common-in-javascript",level:4},{value:"\ud83d\udd12 Understanding Keywords",id:"-understanding-keywords",level:2},{value:"\ud83d\udccb Complete List of JavaScript Keywords",id:"-complete-list-of-javascript-keywords",level:3},{value:"\ud83d\udcca Keywords Reference Table",id:"-keywords-reference-table",level:3},{value:"\ud83c\udfaf Practical Examples",id:"-practical-examples",level:2},{value:"\ud83d\udd04 Control Flow Keywords",id:"-control-flow-keywords",level:3},{value:"\ud83d\udce6 Variable Declaration Keywords",id:"-variable-declaration-keywords",level:3},{value:"\ud83c\udfd7\ufe0f Object-Oriented Keywords",id:"\ufe0f-object-oriented-keywords",level:3},{value:"\u26a1 Async Keywords",id:"-async-keywords",level:3},{value:"\u26a0\ufe0f Common Mistakes and Best Practices",id:"\ufe0f-common-mistakes-and-best-practices",level:2},{value:"\ud83d\udeab Don&#39;t Use Keywords as Identifiers",id:"-dont-use-keywords-as-identifiers",level:3},{value:"\ud83c\udfaf Choose Meaningful Names",id:"-choose-meaningful-names",level:3},{value:"\ud83d\udccf Use Consistent Naming Conventions",id:"-use-consistent-naming-conventions",level:3},{value:"\ud83e\uddea Practice Exercises",id:"-practice-exercises",level:2},{value:"Exercise 1: Identify Valid Identifiers",id:"exercise-1-identify-valid-identifiers",level:3},{value:"Exercise 2: Fix the Keywords",id:"exercise-2-fix-the-keywords",level:3},{value:"Exercise 3: Apply Naming Conventions",id:"exercise-3-apply-naming-conventions",level:3},{value:"\ud83d\udd11 Key Takeaways",id:"-key-takeaways",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"-chapter-3-keywords-and-identifiers-in-javascript",children:"\ud83d\udd11 Chapter 3: Keywords and Identifiers in JavaScript"})}),"\n",(0,d.jsx)(n.h2,{id:"-understanding-identifiers",children:"\ud83d\udcdd Understanding Identifiers"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Identifiers"})," are names that you create as a programmer to identify variables, functions, objects, classes, and other elements in your code. Think of them as labels that help you and JavaScript recognize different parts of your program."]}),"\n",(0,d.jsx)(n.h3,{id:"-what-makes-a-valid-identifier",children:"\ud83c\udfaf What Makes a Valid Identifier?"}),"\n",(0,d.jsx)(n.p,{children:"Identifiers must follow specific rules to be valid in JavaScript:"}),"\n",(0,d.jsx)(n.h4,{id:"-valid-rules",children:"\u2705 Valid Rules"}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Must start with:"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"A letter (a-z, A-Z)"}),"\n",(0,d.jsx)(n.li,{children:"An underscore (_)"}),"\n",(0,d.jsx)(n.li,{children:"A dollar sign ($)"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"After the first character, can contain:"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Letters (a-z, A-Z)"}),"\n",(0,d.jsx)(n.li,{children:"Numbers (0-9)"}),"\n",(0,d.jsx)(n.li,{children:"Underscores (_)"}),"\n",(0,d.jsx)(n.li,{children:"Dollar signs ($)"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Case-sensitive"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"myVariable"})," and ",(0,d.jsx)(n.code,{children:"MyVariable"})," are different identifiers"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Cannot be a reserved word"})," (keyword)"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"-invalid-examples",children:"\u274c Invalid Examples"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// \u274c Cannot start with a number\nlet 1variable = "invalid";\n\n// \u274c Cannot contain spaces\nlet my variable = "invalid";\n\n// \u274c Cannot contain special characters (except _ and $)\nlet my-variable = "invalid";\nlet my@variable = "invalid";\n\n// \u274c Cannot be a reserved keyword\nlet let = "invalid";\nlet function = "invalid";\n'})}),"\n",(0,d.jsx)(n.h4,{id:"-valid-examples",children:"\u2705 Valid Examples"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// \u2705 Valid identifiers\nlet myVariable = "valid";\nlet _privateVar = "valid";\nlet $element = "valid";\nlet user123 = "valid";\nlet camelCaseVariable = "valid";\nlet CONSTANT_VALUE = "valid";\n\n// \u2705 Valid function names\nfunction calculateTotal() {}\nfunction _helperFunction() {}\nfunction $jQuery() {}\n\n// \u2705 Valid object properties\nconst person = {\n  firstName: "John",\n  lastName: "Doe",\n  age_in_years: 30\n};\n'})}),"\n",(0,d.jsx)(n.h3,{id:"-naming-conventions",children:"\ud83c\udfa8 Naming Conventions"}),"\n",(0,d.jsx)(n.p,{children:"While JavaScript allows many naming patterns, following conventions makes your code more readable and maintainable:"}),"\n",(0,d.jsx)(n.h4,{id:"-camelcase-recommended-for-variables-and-functions",children:"\ud83d\udc2a camelCase (Recommended for variables and functions)"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'let firstName = "John";\nlet calculateTotalPrice = function() {};\nlet userAccountBalance = 1000;\n'})}),"\n",(0,d.jsx)(n.h4,{id:"\ufe0f-pascalcase-recommended-for-classes-and-constructors",children:"\ud83c\udfdb\ufe0f PascalCase (Recommended for classes and constructors)"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"class UserAccount {}\nclass BankingSystem {}\nfunction PersonConstructor() {}\n"})}),"\n",(0,d.jsx)(n.h4,{id:"-upper_snake_case-recommended-for-constants",children:"\ud83d\udd24 UPPER_SNAKE_CASE (Recommended for constants)"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'const MAX_RETRY_ATTEMPTS = 3;\nconst API_BASE_URL = "https://api.example.com";\nconst DEFAULT_TIMEOUT = 5000;\n'})}),"\n",(0,d.jsx)(n.h4,{id:"-snake_case-less-common-in-javascript",children:"\ud83d\udc0d snake_case (Less common in JavaScript)"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'let user_name = "john_doe";  // Less preferred\nlet api_response = {};       // Less preferred\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-understanding-keywords",children:"\ud83d\udd12 Understanding Keywords"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Keywords"})," are reserved words that have special meaning in JavaScript. They are part of the language syntax and cannot be used as identifiers."]}),"\n",(0,d.jsx)(n.h3,{id:"-complete-list-of-javascript-keywords",children:"\ud83d\udccb Complete List of JavaScript Keywords"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Category"}),(0,d.jsx)(n.th,{children:"Keywords"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\ud83d\udd04 Control Flow"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"if"}),", ",(0,d.jsx)(n.code,{children:"else"}),", ",(0,d.jsx)(n.code,{children:"switch"}),", ",(0,d.jsx)(n.code,{children:"case"}),", ",(0,d.jsx)(n.code,{children:"default"}),", ",(0,d.jsx)(n.code,{children:"for"}),", ",(0,d.jsx)(n.code,{children:"while"}),", ",(0,d.jsx)(n.code,{children:"do"}),", ",(0,d.jsx)(n.code,{children:"break"}),", ",(0,d.jsx)(n.code,{children:"continue"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\ud83d\udce6 Variables"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"var"}),", ",(0,d.jsx)(n.code,{children:"let"}),", ",(0,d.jsx)(n.code,{children:"const"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\ud83d\udd27 Functions"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"function"}),", ",(0,d.jsx)(n.code,{children:"return"}),", ",(0,d.jsx)(n.code,{children:"async"}),", ",(0,d.jsx)(n.code,{children:"await"}),", ",(0,d.jsx)(n.code,{children:"yield"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\ud83c\udfd7\ufe0f Objects & Classes"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"class"}),", ",(0,d.jsx)(n.code,{children:"extends"}),", ",(0,d.jsx)(n.code,{children:"super"}),", ",(0,d.jsx)(n.code,{children:"static"}),", ",(0,d.jsx)(n.code,{children:"new"}),", ",(0,d.jsx)(n.code,{children:"this"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\ud83d\udce4\ud83d\udce5 Modules"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"import"}),", ",(0,d.jsx)(n.code,{children:"export"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\u26a0\ufe0f Error Handling"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"try"}),", ",(0,d.jsx)(n.code,{children:"catch"}),", ",(0,d.jsx)(n.code,{children:"finally"}),", ",(0,d.jsx)(n.code,{children:"throw"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\ud83d\udd0d Operators"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"typeof"}),", ",(0,d.jsx)(n.code,{children:"instanceof"}),", ",(0,d.jsx)(n.code,{children:"in"}),", ",(0,d.jsx)(n.code,{children:"delete"}),", ",(0,d.jsx)(n.code,{children:"void"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\ud83d\udcc4 Values"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"null"}),", ",(0,d.jsx)(n.code,{children:"undefined"}),", ",(0,d.jsx)(n.code,{children:"true"}),", ",(0,d.jsx)(n.code,{children:"false"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\ud83d\udeab Deprecated"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"with"}),", ",(0,d.jsx)(n.code,{children:"debugger"})]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"\ud83c\udd94 Special"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"Symbol"})})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"-keywords-reference-table",children:"\ud83d\udcca Keywords Reference Table"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Keyword"}),(0,d.jsx)(n.th,{children:"Category"}),(0,d.jsx)(n.th,{children:"Purpose"}),(0,d.jsx)(n.th,{children:"Example"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"async"})}),(0,d.jsx)(n.td,{children:"Functions"}),(0,d.jsx)(n.td,{children:"Declares async function"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"async function fetchData() {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"await"})}),(0,d.jsx)(n.td,{children:"Functions"}),(0,d.jsx)(n.td,{children:"Waits for promise resolution"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"const data = await fetch(url);"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"break"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"Exits loop or switch"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"for(let i=0; i<10; i++) { if(i===5) break; }"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"case"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"Switch case label"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"switch(x) { case 1: console.log('one'); }"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"catch"})}),(0,d.jsx)(n.td,{children:"Error Handling"}),(0,d.jsx)(n.td,{children:"Catches exceptions"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"try {} catch(error) {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"class"})}),(0,d.jsx)(n.td,{children:"OOP"}),(0,d.jsx)(n.td,{children:"Declares a class"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"class Person {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"const"})}),(0,d.jsx)(n.td,{children:"Variables"}),(0,d.jsx)(n.td,{children:"Declares constant"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"const PI = 3.14159;"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"continue"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"Skips iteration"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"for(let i=0; i<10; i++) { if(i%2) continue; }"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"debugger"})}),(0,d.jsx)(n.td,{children:"Debug"}),(0,d.jsx)(n.td,{children:"Breakpoint for debugging"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"debugger; // Pauses execution"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"default"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"Default case in switch"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"switch(x) { default: console.log('other'); }"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"delete"})}),(0,d.jsx)(n.td,{children:"Operators"}),(0,d.jsx)(n.td,{children:"Deletes object property"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"delete obj.property;"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"do"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"Do-while loop"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"do { console.log('hello'); } while(false);"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"else"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"Alternative condition"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"if(true) {} else {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"export"})}),(0,d.jsx)(n.td,{children:"Modules"}),(0,d.jsx)(n.td,{children:"Exports from module"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"export const myVar = 42;"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"extends"})}),(0,d.jsx)(n.td,{children:"OOP"}),(0,d.jsx)(n.td,{children:"Class inheritance"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"class Dog extends Animal {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsx)(n.td,{children:"Values"}),(0,d.jsx)(n.td,{children:"Boolean false value"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"const isReady = false;"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"finally"})}),(0,d.jsx)(n.td,{children:"Error Handling"}),(0,d.jsx)(n.td,{children:"Always executes"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"try {} catch {} finally {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"for"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"For loop"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"for(let i=0; i<10; i++) {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"function"})}),(0,d.jsx)(n.td,{children:"Functions"}),(0,d.jsx)(n.td,{children:"Declares function"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"function greet() {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"if"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"Conditional statement"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"if(condition) {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"import"})}),(0,d.jsx)(n.td,{children:"Modules"}),(0,d.jsx)(n.td,{children:"Imports from module"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"import React from 'react';"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"in"})}),(0,d.jsx)(n.td,{children:"Operators"}),(0,d.jsx)(n.td,{children:"Property existence check"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"'name' in person"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"instanceof"})}),(0,d.jsx)(n.td,{children:"Operators"}),(0,d.jsx)(n.td,{children:"Instance type check"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"obj instanceof Array"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"let"})}),(0,d.jsx)(n.td,{children:"Variables"}),(0,d.jsx)(n.td,{children:"Block-scoped variable"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"let count = 0;"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"new"})}),(0,d.jsx)(n.td,{children:"Operators"}),(0,d.jsx)(n.td,{children:"Creates instance"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"const date = new Date();"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"null"})}),(0,d.jsx)(n.td,{children:"Values"}),(0,d.jsx)(n.td,{children:"Null value"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"const data = null;"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"return"})}),(0,d.jsx)(n.td,{children:"Functions"}),(0,d.jsx)(n.td,{children:"Returns value"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"function add(a,b) { return a + b; }"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"static"})}),(0,d.jsx)(n.td,{children:"OOP"}),(0,d.jsx)(n.td,{children:"Static class member"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"class Utils { static helper() {} }"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"super"})}),(0,d.jsx)(n.td,{children:"OOP"}),(0,d.jsx)(n.td,{children:"Parent class reference"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"super.methodName();"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"switch"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"Multi-way branch"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"switch(value) { case 1: break; }"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"this"})}),(0,d.jsx)(n.td,{children:"Context"}),(0,d.jsx)(n.td,{children:"Current object reference"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"this.property"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"throw"})}),(0,d.jsx)(n.td,{children:"Error Handling"}),(0,d.jsx)(n.td,{children:"Throws exception"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"throw new Error('message');"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{children:"Values"}),(0,d.jsx)(n.td,{children:"Boolean true value"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"const isValid = true;"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"try"})}),(0,d.jsx)(n.td,{children:"Error Handling"}),(0,d.jsx)(n.td,{children:"Tries code block"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"try { riskyCode(); }"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"typeof"})}),(0,d.jsx)(n.td,{children:"Operators"}),(0,d.jsx)(n.td,{children:"Type checking"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"typeof variable === 'string'"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"Values"}),(0,d.jsx)(n.td,{children:"Undefined value"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"let x; // x is undefined"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"var"})}),(0,d.jsx)(n.td,{children:"Variables"}),(0,d.jsx)(n.td,{children:"Function-scoped variable"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"var name = 'John';"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"void"})}),(0,d.jsx)(n.td,{children:"Operators"}),(0,d.jsx)(n.td,{children:"Returns undefined"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"void 0"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"while"})}),(0,d.jsx)(n.td,{children:"Control Flow"}),(0,d.jsx)(n.td,{children:"While loop"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"while(condition) {}"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"with"})}),(0,d.jsx)(n.td,{children:"Deprecated"}),(0,d.jsx)(n.td,{children:"Extends scope chain"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"with(obj) {} // Not recommended"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"yield"})}),(0,d.jsx)(n.td,{children:"Functions"}),(0,d.jsx)(n.td,{children:"Generator yield"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"function* gen() { yield 1; }"})})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-practical-examples",children:"\ud83c\udfaf Practical Examples"}),"\n",(0,d.jsx)(n.h3,{id:"-control-flow-keywords",children:"\ud83d\udd04 Control Flow Keywords"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"// if, else, switch, case, default\nfunction checkGrade(score) {\n  if (score >= 90) {\n    return 'A';\n  } else if (score >= 80) {\n    return 'B';\n  } else {\n    switch (true) {\n      case score >= 70:\n        return 'C';\n      case score >= 60:\n        return 'D';\n      default:\n        return 'F';\n    }\n  }\n}\n\n// for, while, do, break, continue\nfunction processNumbers() {\n  for (let i = 0; i < 10; i++) {\n    if (i % 2 === 0) continue; // Skip even numbers\n    if (i > 7) break;          // Stop when i > 7\n    console.log(i);            // Prints: 1, 3, 5, 7\n  }\n}\n"})}),"\n",(0,d.jsx)(n.h3,{id:"-variable-declaration-keywords",children:"\ud83d\udce6 Variable Declaration Keywords"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// var, let, const\nvar globalVar = "I\'m function-scoped";     // Function-scoped\nlet blockVar = "I\'m block-scoped";         // Block-scoped\nconst constantVar = "I can\'t be reassigned"; // Block-scoped, immutable\n\nfunction demonstrateScope() {\n  if (true) {\n    var funcScoped = "accessible outside this block";\n    let blockScoped = "only accessible in this block";\n    const alsoBlockScoped = "also only in this block";\n  }\n  \n  console.log(funcScoped);     // \u2705 Works\n  // console.log(blockScoped); // \u274c Error\n  // console.log(alsoBlockScoped); // \u274c Error\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"\ufe0f-object-oriented-keywords",children:"\ud83c\udfd7\ufe0f Object-Oriented Keywords"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// class, extends, super, static, new, this\nclass Animal {\n  constructor(name) {\n    this.name = name;\n  }\n  \n  static getSpecies() {\n    return "Unknown species";\n  }\n  \n  speak() {\n    console.log(`${this.name} makes a sound`);\n  }\n}\n\nclass Dog extends Animal {\n  constructor(name, breed) {\n    super(name); // Call parent constructor\n    this.breed = breed;\n  }\n  \n  speak() {\n    console.log(`${this.name} barks`);\n  }\n}\n\nconst myDog = new Dog("Buddy", "Golden Retriever");\nmyDog.speak(); // "Buddy barks"\n'})}),"\n",(0,d.jsx)(n.h3,{id:"-async-keywords",children:"\u26a1 Async Keywords"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"// async, await\nasync function fetchUserData(userId) {\n  try {\n    const response = await fetch(`/api/users/${userId}`);\n    const userData = await response.json();\n    return userData;\n  } catch (error) {\n    throw new Error(`Failed to fetch user: ${error.message}`);\n  }\n}\n\n// Using the async function\nfetchUserData(123)\n  .then(user => console.log(user))\n  .catch(error => console.error(error));\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"\ufe0f-common-mistakes-and-best-practices",children:"\u26a0\ufe0f Common Mistakes and Best Practices"}),"\n",(0,d.jsx)(n.h3,{id:"-dont-use-keywords-as-identifiers",children:"\ud83d\udeab Don't Use Keywords as Identifiers"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// \u274c BAD - Using keywords\nlet class = "Math";      // SyntaxError\nlet function = "helper"; // SyntaxError\nlet var = "variable";    // SyntaxError\n\n// \u2705 GOOD - Valid alternatives\nlet className = "Math";\nlet functionName = "helper";\nlet variableName = "variable";\n'})}),"\n",(0,d.jsx)(n.h3,{id:"-choose-meaningful-names",children:"\ud83c\udfaf Choose Meaningful Names"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// \u274c BAD - Unclear names\nlet x = "John";\nlet fn = function() {};\nlet d = new Date();\n\n// \u2705 GOOD - Descriptive names\nlet userName = "John";\nlet calculateTotal = function() {};\nlet currentDate = new Date();\n'})}),"\n",(0,d.jsx)(n.h3,{id:"-use-consistent-naming-conventions",children:"\ud83d\udccf Use Consistent Naming Conventions"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// \u274c BAD - Inconsistent\nlet user_name = "John";\nlet UserAge = 30;\nlet USERTYPE = "admin";\n\n// \u2705 GOOD - Consistent camelCase\nlet userName = "John";\nlet userAge = 30;\nlet userType = "admin";\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-practice-exercises",children:"\ud83e\uddea Practice Exercises"}),"\n",(0,d.jsx)(n.h3,{id:"exercise-1-identify-valid-identifiers",children:"Exercise 1: Identify Valid Identifiers"}),"\n",(0,d.jsx)(n.p,{children:"Which of these are valid JavaScript identifiers?"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"// Your task: Mark each as \u2705 valid or \u274c invalid\nlet _underscore;      // ?\nlet $dollar;          // ?\nlet 123number;        // ?\nlet my-variable;      // ?\nlet firstName;        // ?\nlet class;            // ?\nlet MyClass;          // ?\nlet CONSTANT_VALUE;   // ?\n"})}),"\n",(0,d.jsx)(n.h3,{id:"exercise-2-fix-the-keywords",children:"Exercise 2: Fix the Keywords"}),"\n",(0,d.jsx)(n.p,{children:"Fix the code by replacing invalid keyword usage:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// Fix this code\nlet function = "helper";\nlet class = "Person";\nlet var = 42;\n\nfunction let() {\n  return "this won\'t work";\n}\n'})}),"\n",(0,d.jsx)(n.h3,{id:"exercise-3-apply-naming-conventions",children:"Exercise 3: Apply Naming Conventions"}),"\n",(0,d.jsx)(n.p,{children:"Rename these variables to follow JavaScript conventions:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:'// Apply proper naming conventions\nlet user_first_name = "John";\nlet USERAGE = 30;\nlet user-type = "admin";\nlet IsActive = true;\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-key-takeaways",children:"\ud83d\udd11 Key Takeaways"}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"\ud83d\udcdd Identifiers"})," are names you create; ",(0,d.jsx)(n.strong,{children:"\ud83d\udd12 Keywords"})," are reserved by JavaScript"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"\ud83c\udfaf Naming conventions"})," make code more readable and maintainable"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"\u26a0\ufe0f Avoid using keywords"})," as identifiers to prevent syntax errors"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"\ud83c\udfa8 Choose descriptive names"})," that clearly indicate purpose"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"\ud83d\udccf Be consistent"})," with your naming patterns throughout your codebase"]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"\ud83c\udf93 Next Chapter"}),": Now that you understand how to name things in JavaScript, let's explore ",(0,d.jsx)(n.a,{href:"./04.%20Types%20of%20Identifiers.MD",children:"different types of identifiers and data types"})," to understand what kinds of values these names can represent!"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var r=s(6540);const d={},i=r.createContext(d);function c(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);