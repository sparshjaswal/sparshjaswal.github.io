"use strict";(globalThis.webpackChunka=globalThis.webpackChunka||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","href":"/docs/SOLID-Design-principles/","label":"\ud83c\udfdb\ufe0f SOLID Design Principles","docId":"SOLID-Design-principles/README","unlisted":false},{"type":"category","label":"\ud83c\udfa8 Design Patterns","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"behavioral","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/docs/design-pattern/behavioral/chain-of-responsibility","label":"Chain of Responsibility Pattern \u26d3\ufe0f","docId":"design-pattern/behavioral/chain-of-responsibility","unlisted":false},{"type":"link","href":"/docs/design-pattern/behavioral/command","label":"Command Pattern \ud83c\udfae","docId":"design-pattern/behavioral/command","unlisted":false},{"type":"link","href":"/docs/design-pattern/behavioral/iterator","label":"Iterator Pattern \ud83d\udd04","docId":"design-pattern/behavioral/iterator","unlisted":false},{"type":"link","href":"/docs/design-pattern/behavioral/mediator","label":"Mediator Pattern \ud83c\udfad","docId":"design-pattern/behavioral/mediator","unlisted":false},{"type":"link","href":"/docs/design-pattern/behavioral/memento","label":"Memento Pattern \ud83d\udcbe","docId":"design-pattern/behavioral/memento","unlisted":false},{"type":"link","href":"/docs/design-pattern/behavioral/observer","label":"Observer Pattern \ud83d\udd14","docId":"design-pattern/behavioral/observer","unlisted":false},{"type":"link","href":"/docs/design-pattern/behavioral/state","label":"State Pattern \ud83c\udf9b\ufe0f","docId":"design-pattern/behavioral/state","unlisted":false},{"type":"link","href":"/docs/design-pattern/behavioral/strategy","label":"Strategy Pattern \ud83c\udfaf","docId":"design-pattern/behavioral/strategy","unlisted":false},{"type":"link","href":"/docs/design-pattern/behavioral/template-method","label":"Template Method Pattern \ud83d\udccb","docId":"design-pattern/behavioral/template-method","unlisted":false},{"type":"link","href":"/docs/design-pattern/behavioral/visitor","label":"Visitor Pattern \ud83c\udfc3\u200d\u2642\ufe0f","docId":"design-pattern/behavioral/visitor","unlisted":false}]},{"type":"category","label":"creational","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/docs/design-pattern/creational/abstract-factory","label":"Abstract Factory Pattern \ud83c\udfed\ud83d\udd27","docId":"design-pattern/creational/abstract-factory","unlisted":false},{"type":"link","href":"/docs/design-pattern/creational/builder","label":"Builder Pattern \ud83c\udfd7\ufe0f","docId":"design-pattern/creational/builder","unlisted":false},{"type":"link","href":"/docs/design-pattern/creational/factory-method","label":"Factory Method Pattern \ud83c\udfed","docId":"design-pattern/creational/factory-method","unlisted":false},{"type":"link","href":"/docs/design-pattern/creational/prototype","label":"Prototype Pattern \ud83e\uddec","docId":"design-pattern/creational/prototype","unlisted":false},{"type":"link","href":"/docs/design-pattern/creational/singleton","label":"Singleton Pattern \ud83c\udfef","docId":"design-pattern/creational/singleton","unlisted":false}]},{"type":"category","label":"structural","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/docs/design-pattern/structural/adapter","label":"Adapter Pattern \ud83d\udd0c","docId":"design-pattern/structural/adapter","unlisted":false},{"type":"link","href":"/docs/design-pattern/structural/bridge","label":"Bridge Pattern \ud83c\udf09","docId":"design-pattern/structural/bridge","unlisted":false},{"type":"link","href":"/docs/design-pattern/structural/composite","label":"Composite Pattern \ud83c\udf33","docId":"design-pattern/structural/composite","unlisted":false},{"type":"link","href":"/docs/design-pattern/structural/decorator","label":"Decorator Pattern \ud83c\udfa8","docId":"design-pattern/structural/decorator","unlisted":false},{"type":"link","href":"/docs/design-pattern/structural/facade","label":"Facade Pattern \ud83c\udfdb\ufe0f","docId":"design-pattern/structural/facade","unlisted":false},{"type":"link","href":"/docs/design-pattern/structural/flyweight","label":"Flyweight Pattern \ud83e\udeb6","docId":"design-pattern/structural/flyweight","unlisted":false},{"type":"link","href":"/docs/design-pattern/structural/proxy","label":"Proxy Pattern \ud83d\udee1\ufe0f","docId":"design-pattern/structural/proxy","unlisted":false}]}],"href":"/docs/design-pattern/"},{"type":"category","label":"DSA Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/docs/dsa-concepts/advanced-data-structures/","label":"Advanced Data Structures","docId":"dsa-concepts/advanced-data-structures/README","unlisted":false},{"type":"link","href":"/docs/dsa-concepts/advanced-topics/","label":"Advanced Topics in Data Structures and Algorithms","docId":"dsa-concepts/advanced-topics/README","unlisted":false},{"type":"link","href":"/docs/dsa-concepts/algorithms/","label":"Algorithms in Data Structures and Algorithms (DSA)","docId":"dsa-concepts/algorithms/README","unlisted":false},{"type":"link","href":"/docs/dsa-concepts/basic-data-structures/","label":"Basic Data Structures","docId":"dsa-concepts/basic-data-structures/README","unlisted":false},{"type":"link","href":"/docs/dsa-concepts/binary-search/","label":"Binary Search","docId":"dsa-concepts/binary-search/README","unlisted":false},{"type":"link","href":"/docs/dsa-concepts/bit-manipulation/","label":"README","docId":"dsa-concepts/bit-manipulation/README","unlisted":false},{"type":"link","href":"/docs/dsa-concepts/introduction-to-dsa/","label":"Introduction to Data Structures and Algorithms (DSA)","docId":"dsa-concepts/introduction-to-dsa/README","unlisted":false},{"type":"link","href":"/docs/dsa-concepts/linked-list/","label":"README","docId":"dsa-concepts/linked-list/README","unlisted":false},{"type":"link","href":"/docs/dsa-concepts/problem-solving-patterns/","label":"Problem Solving Patterns","docId":"dsa-concepts/problem-solving-patterns/README","unlisted":false}],"href":"/docs/dsa-concepts/"},{"type":"category","label":"Data Structures and Algorithms Pattern Guide","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/docs/dsa-key-pattern/Fast-and-Slow-Pointer","label":"Fast and Slow Pointer","docId":"dsa-key-pattern/Fast-and-Slow-Pointer","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Overlapping-Intervals","label":"Overlapping Intervals","docId":"dsa-key-pattern/Overlapping-Intervals","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Prefix-Sum","label":"Prefix Sum","docId":"dsa-key-pattern/Prefix-Sum","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Sliding-Window","label":"Sliding Window","docId":"dsa-key-pattern/Sliding-Window","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Two-Pointers","label":"Two Pointers","docId":"dsa-key-pattern/Two-Pointers","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Cyclic-Sort","label":"Cyclic Sort (Index-Based)","docId":"dsa-key-pattern/Cyclic-Sort","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Reversal-of-Linked-List","label":"Reversal of Linked List (In-place)","docId":"dsa-key-pattern/Reversal-of-Linked-List","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Matrix-Manipulation","label":"Matrix Manipulation","docId":"dsa-key-pattern/Matrix-Manipulation","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Breadth-First-Search","label":"Breadth First Search (BFS)","docId":"dsa-key-pattern/Breadth-First-Search","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Depth-First-Search","label":"Depth First Search (DFS)","docId":"dsa-key-pattern/Depth-First-Search","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Backtracking","label":"Backtracking","docId":"dsa-key-pattern/Backtracking","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Modified-Binary-Search","label":"Modified Binary Search","docId":"dsa-key-pattern/Modified-Binary-Search","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Bitwise-XOR","label":"Bitwise XOR","docId":"dsa-key-pattern/Bitwise-XOR","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Top-K-Elements","label":"Top \'K\' Elements","docId":"dsa-key-pattern/Top-K-Elements","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/K-way-Merge","label":"K-way Merge","docId":"dsa-key-pattern/K-way-Merge","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Two-Heaps","label":"Two Heaps","docId":"dsa-key-pattern/Two-Heaps","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Monotonic-Stack","label":"Monotonic Stack","docId":"dsa-key-pattern/Monotonic-Stack","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Trees","label":"Trees","docId":"dsa-key-pattern/Trees","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Dynamic-Programming","label":"Dynamic Programming","docId":"dsa-key-pattern/Dynamic-Programming","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Graphs","label":"Graphs","docId":"dsa-key-pattern/Graphs","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Greedy","label":"Greedy","docId":"dsa-key-pattern/Greedy","unlisted":false},{"type":"link","href":"/docs/dsa-key-pattern/Design-Data-Structure","label":"Design Data Structure","docId":"dsa-key-pattern/Design-Data-Structure","unlisted":false}],"href":"/docs/dsa-key-pattern/"},{"type":"category","label":"functional-programming","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/docs/functional-programming/GETTING_STARTED","label":"\ud83d\ude80 Functional Programming - Quick Start Guide","docId":"functional-programming/GETTING_STARTED","unlisted":false},{"type":"link","href":"/docs/functional-programming/function-and-composition/","label":"\ud83d\udd04 Function Composition & Higher-Order Functions","docId":"functional-programming/function-and-composition/README","unlisted":false},{"type":"link","href":"/docs/functional-programming/functor-functions/","label":"\ud83c\udfad Functor Functions & Mappable Structures","docId":"functional-programming/functor-functions/README","unlisted":false},{"type":"link","href":"/docs/functional-programming/monads/","label":"\ud83c\udfd7\ufe0f Monads: Advanced Functional Patterns","docId":"functional-programming/monads/README","unlisted":false},{"type":"link","href":"/docs/functional-programming/pure-function-and-side-effect/","label":"\ud83c\udfaf Pure Functions and Side Effects","docId":"functional-programming/pure-function-and-side-effect/README","unlisted":false},{"type":"link","href":"/docs/functional-programming/referential-programming/","label":"\ud83d\udd12 Referential Transparency & Mathematical Foundations","docId":"functional-programming/referential-programming/README","unlisted":false}]},{"type":"category","label":"\ud83d\ude80 Complete JavaScript Mastery Guide","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/docs/javascript/ENHANCEMENT_SUMMARY","label":"\ud83d\udcda JavaScript Learning Guide - Enhancement Summary","docId":"javascript/ENHANCEMENT_SUMMARY","unlisted":false},{"type":"link","href":"/docs/javascript/Transpiler","label":"Compiler","docId":"javascript/Transpiler","unlisted":false},{"type":"link","href":"/docs/javascript/array-methods","label":"JavaScript Array Methods","docId":"javascript/array-methods","unlisted":false},{"type":"link","href":"/docs/javascript/array-patterns","label":"Array Pattern","docId":"javascript/array-patterns","unlisted":false},{"type":"link","href":"/docs/javascript/array-properties","label":"Array Properties","docId":"javascript/array-properties","unlisted":false},{"type":"link","href":"/docs/javascript/arrays","label":"Array","docId":"javascript/arrays","unlisted":false},{"type":"link","href":"/docs/javascript/async-await-enhanced","label":"\u23f0 Async/Await - Complete Guide","docId":"javascript/async-await-enhanced","unlisted":false},{"type":"link","href":"/docs/javascript/async-await","label":"Async & Await","docId":"javascript/async-await","unlisted":false},{"type":"link","href":"/docs/javascript/asynchronous","label":"What is Asynchronous?","docId":"javascript/asynchronous","unlisted":false},{"type":"link","href":"/docs/javascript/destructuring","label":"JavaScript Destructuring","docId":"javascript/destructuring","unlisted":false},{"type":"link","href":"/docs/javascript/document-object-model","label":"\ud83c\udf10 Document Object Model (DOM) - Complete Guide","docId":"javascript/document-object-model","unlisted":false},{"type":"link","href":"/docs/javascript/error-handling","label":"Error Handling","docId":"javascript/error-handling","unlisted":false},{"type":"link","href":"/docs/javascript/event-handling","label":"Event Handling","docId":"javascript/event-handling","unlisted":false},{"type":"link","href":"/docs/javascript/flow-of-control","label":"Flow Control in JavaScript","docId":"javascript/flow-of-control","unlisted":false},{"type":"link","href":"/docs/javascript/function-callback","label":"function-callback","docId":"javascript/function-callback","unlisted":false},{"type":"link","href":"/docs/javascript/function-closure","label":"JavaScript Closures","docId":"javascript/function-closure","unlisted":false},{"type":"link","href":"/docs/javascript/function-iife","label":"IIFE (Immediately Invoked Function Expression)","docId":"javascript/function-iife","unlisted":false},{"type":"link","href":"/docs/javascript/function-lambda","label":"LAMBDA","docId":"javascript/function-lambda","unlisted":false},{"type":"link","href":"/docs/javascript/function-memoization","label":"Memoization","docId":"javascript/function-memoization","unlisted":false},{"type":"link","href":"/docs/javascript/function-recursion","label":"Recursion in JavaScript","docId":"javascript/function-recursion","unlisted":false},{"type":"link","href":"/docs/javascript/function-types","label":"JavaScript Function Types","docId":"javascript/function-types","unlisted":false},{"type":"link","href":"/docs/javascript/history","label":"\ud83d\udcda Chapter 1: The Complete History of JavaScript","docId":"javascript/history","unlisted":false},{"type":"link","href":"/docs/javascript/hoisting","label":"JavaScript Hoisting","docId":"javascript/hoisting","unlisted":false},{"type":"link","href":"/docs/javascript/how-browsers-load-webpages","label":"How Browsers Load Webpages - Complete Guide","docId":"javascript/how-browsers-load-webpages","unlisted":false},{"type":"link","href":"/docs/javascript/import-and-export","label":"import-and-export","docId":"javascript/import-and-export","unlisted":false},{"type":"link","href":"/docs/javascript/iterators-and-generators","label":"Iterators & Generators","docId":"javascript/iterators-and-generators","unlisted":false},{"type":"link","href":"/docs/javascript/javascript-engine-basic-unit","label":"Unit of JavaScript Compiler","docId":"javascript/javascript-engine-basic-unit","unlisted":false},{"type":"link","href":"/docs/javascript/js-best-practices","label":"\ud83d\ude80 Modern JavaScript Best Practices & Performance Guide","docId":"javascript/js-best-practices","unlisted":false},{"type":"link","href":"/docs/javascript/keyword","label":"\ud83d\udd11 Chapter 3: Keywords and Identifiers in JavaScript","docId":"javascript/keyword","unlisted":false},{"type":"link","href":"/docs/javascript/loops","label":"Loop","docId":"javascript/loops","unlisted":false},{"type":"link","href":"/docs/javascript/modern-js-patterns","label":"\ud83d\udd25 Modern JavaScript Patterns & Advanced Techniques","docId":"javascript/modern-js-patterns","unlisted":false},{"type":"link","href":"/docs/javascript/modular-javascript-enhanced","label":"\ud83d\udce6 JavaScript Modules - Complete Guide (ES6+)","docId":"javascript/modular-javascript-enhanced","unlisted":false},{"type":"link","href":"/docs/javascript/modular-javascript","label":"Modular JavaScript [ ES 6 ]","docId":"javascript/modular-javascript","unlisted":false},{"type":"link","href":"/docs/javascript/object-composition","label":"Object Composition in JavaScript","docId":"javascript/object-composition","unlisted":false},{"type":"link","href":"/docs/javascript/operators-and-operands","label":"OPERATORS & OPERANDS","docId":"javascript/operators-and-operands","unlisted":false},{"type":"link","href":"/docs/javascript/promises-enhanced","label":"\ud83e\udd1d JavaScript Promises - Complete Guide","docId":"javascript/promises-enhanced","unlisted":false},{"type":"link","href":"/docs/javascript/quick-reference-cheatsheet","label":"\ud83d\ude80 JavaScript Quick Reference Cheatsheet","docId":"javascript/quick-reference-cheatsheet","unlisted":false},{"type":"link","href":"/docs/javascript/quick-reference","label":"\ud83d\udcda JavaScript Quick Reference & Improvement Summary","docId":"javascript/quick-reference","unlisted":false},{"type":"link","href":"/docs/javascript/scope","label":"JavaScript Scope","docId":"javascript/scope","unlisted":false},{"type":"link","href":"/docs/javascript/spread-operator","label":"Spread [es6]","docId":"javascript/spread-operator","unlisted":false},{"type":"link","href":"/docs/javascript/symbol","label":"Symbol","docId":"javascript/symbol","unlisted":false},{"type":"link","href":"/docs/javascript/template-literals","label":"Template Literals [es6]","docId":"javascript/template-literals","unlisted":false},{"type":"link","href":"/docs/javascript/testing-guide","label":"\ud83e\uddea JavaScript Testing Mastery Guide","docId":"javascript/testing-guide","unlisted":false},{"type":"link","href":"/docs/javascript/type-casting-and-coercion","label":"Type Casting and Coercion","docId":"javascript/type-casting-and-coercion","unlisted":false},{"type":"link","href":"/docs/javascript/types-of-identifiers","label":"CHAPTER 1 | Data TYPES OR TYPES OF IDENTIFIERS","docId":"javascript/types-of-identifiers","unlisted":false},{"type":"link","href":"/docs/javascript/use-strict","label":"use strict","docId":"javascript/use-strict","unlisted":false},{"type":"link","href":"/docs/javascript/variables-var-let-const","label":"var, let & const","docId":"javascript/variables-var-let-const","unlisted":false}],"href":"/docs/javascript/"}]},"docs":{"design-pattern/behavioral/chain-of-responsibility":{"id":"design-pattern/behavioral/chain-of-responsibility","title":"Chain of Responsibility Pattern \u26d3\ufe0f","description":"Definition: The Chain of Responsibility pattern passes requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.","sidebar":"tutorialSidebar"},"design-pattern/behavioral/command":{"id":"design-pattern/behavioral/command","title":"Command Pattern \ud83c\udfae","description":"Definition: The Command pattern turns a request into a stand-alone object that contains all information about the request. This transformation lets you parameterize methods with different requests, delay or queue a request\'s execution, and support undoable operations.","sidebar":"tutorialSidebar"},"design-pattern/behavioral/iterator":{"id":"design-pattern/behavioral/iterator","title":"Iterator Pattern \ud83d\udd04","description":"Definition: The Iterator pattern provides a way to access elements of a collection sequentially without exposing its underlying representation.","sidebar":"tutorialSidebar"},"design-pattern/behavioral/mediator":{"id":"design-pattern/behavioral/mediator","title":"Mediator Pattern \ud83c\udfad","description":"Definition: The Mediator pattern defines how a set of objects interact with each other. It promotes loose coupling by keeping objects from referring to each other explicitly, and lets you vary their interaction independently.","sidebar":"tutorialSidebar"},"design-pattern/behavioral/memento":{"id":"design-pattern/behavioral/memento","title":"Memento Pattern \ud83d\udcbe","description":"Definition: The Memento pattern captures and stores the internal state of an object without violating encapsulation, so that the object can be restored to this state later.","sidebar":"tutorialSidebar"},"design-pattern/behavioral/observer":{"id":"design-pattern/behavioral/observer","title":"Observer Pattern \ud83d\udd14","description":"Definition: The Observer pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.","sidebar":"tutorialSidebar"},"design-pattern/behavioral/state":{"id":"design-pattern/behavioral/state","title":"State Pattern \ud83c\udf9b\ufe0f","description":"Definition: The State pattern allows an object to alter its behavior when its internal state changes. The object will appear to change its class.","sidebar":"tutorialSidebar"},"design-pattern/behavioral/strategy":{"id":"design-pattern/behavioral/strategy","title":"Strategy Pattern \ud83c\udfaf","description":"Definition: The Strategy pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. Strategy lets the algorithm vary independently from clients that use it.","sidebar":"tutorialSidebar"},"design-pattern/behavioral/template-method":{"id":"design-pattern/behavioral/template-method","title":"Template Method Pattern \ud83d\udccb","description":"Definition: The Template Method pattern defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.","sidebar":"tutorialSidebar"},"design-pattern/behavioral/visitor":{"id":"design-pattern/behavioral/visitor","title":"Visitor Pattern \ud83c\udfc3\u200d\u2642\ufe0f","description":"Definition: The Visitor pattern lets you separate algorithms from the objects on which they operate by defining a family of algorithms, encapsulating each one, and making them interchangeable at runtime.","sidebar":"tutorialSidebar"},"design-pattern/creational/abstract-factory":{"id":"design-pattern/creational/abstract-factory","title":"Abstract Factory Pattern \ud83c\udfed\ud83d\udd27","description":"Definition: The Abstract Factory pattern provides an interface for creating families of related or dependent objects without specifying their concrete classes.","sidebar":"tutorialSidebar"},"design-pattern/creational/builder":{"id":"design-pattern/creational/builder","title":"Builder Pattern \ud83c\udfd7\ufe0f","description":"Definition: The Builder pattern separates the construction of complex objects from their representation, allowing the same construction process to create different representations.","sidebar":"tutorialSidebar"},"design-pattern/creational/factory-method":{"id":"design-pattern/creational/factory-method","title":"Factory Method Pattern \ud83c\udfed","description":"Definition: The Factory Method pattern defines an interface for creating an object, but lets subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses.","sidebar":"tutorialSidebar"},"design-pattern/creational/prototype":{"id":"design-pattern/creational/prototype","title":"Prototype Pattern \ud83e\uddec","description":"Definition: The Prototype pattern allows you to create new objects by cloning existing instances (prototypes) rather than creating new instances from scratch.","sidebar":"tutorialSidebar"},"design-pattern/creational/singleton":{"id":"design-pattern/creational/singleton","title":"Singleton Pattern \ud83c\udfef","description":"Definition: The Singleton pattern ensures that a class has only one instance and provides a global point of access to that instance.","sidebar":"tutorialSidebar"},"design-pattern/README":{"id":"design-pattern/README","title":"\ud83c\udfa8 Design Patterns","description":"A comprehensive guide to software design patterns and principles with JavaScript examples","sidebar":"tutorialSidebar"},"design-pattern/structural/adapter":{"id":"design-pattern/structural/adapter","title":"Adapter Pattern \ud83d\udd0c","description":"Definition: The Adapter pattern allows incompatible interfaces to work together. It acts as a bridge between two incompatible interfaces by wrapping an existing class with a new interface.","sidebar":"tutorialSidebar"},"design-pattern/structural/bridge":{"id":"design-pattern/structural/bridge","title":"Bridge Pattern \ud83c\udf09","description":"Definition: The Bridge pattern separates an abstraction from its implementation, allowing both to vary independently. It uses composition instead of inheritance to connect different hierarchies.","sidebar":"tutorialSidebar"},"design-pattern/structural/composite":{"id":"design-pattern/structural/composite","title":"Composite Pattern \ud83c\udf33","description":"Definition: The Composite pattern lets you compose objects into tree structures to represent part-whole hierarchies. It allows clients to treat individual objects and compositions uniformly.","sidebar":"tutorialSidebar"},"design-pattern/structural/decorator":{"id":"design-pattern/structural/decorator","title":"Decorator Pattern \ud83c\udfa8","description":"Definition: The Decorator pattern allows behavior to be added to objects dynamically without altering their structure. It provides a flexible alternative to subclassing for extending functionality.","sidebar":"tutorialSidebar"},"design-pattern/structural/facade":{"id":"design-pattern/structural/facade","title":"Facade Pattern \ud83c\udfdb\ufe0f","description":"Definition: The Facade pattern provides a simplified interface to a complex subsystem. It defines a higher-level interface that makes the subsystem easier to use.","sidebar":"tutorialSidebar"},"design-pattern/structural/flyweight":{"id":"design-pattern/structural/flyweight","title":"Flyweight Pattern \ud83e\udeb6","description":"Definition: The Flyweight pattern minimizes memory usage by sharing efficiently the common parts of state between multiple objects instead of storing all data in each object.","sidebar":"tutorialSidebar"},"design-pattern/structural/proxy":{"id":"design-pattern/structural/proxy","title":"Proxy Pattern \ud83d\udee1\ufe0f","description":"Definition: The Proxy pattern provides a placeholder or surrogate for another object to control access to it. It acts as an intermediary between a client and the real object.","sidebar":"tutorialSidebar"},"dsa-concepts/advanced-data-structures/README":{"id":"dsa-concepts/advanced-data-structures/README","title":"Advanced Data Structures","description":"Overview","sidebar":"tutorialSidebar"},"dsa-concepts/advanced-topics/README":{"id":"dsa-concepts/advanced-topics/README","title":"Advanced Topics in Data Structures and Algorithms","description":"Disjoint Set (Union-Find)","sidebar":"tutorialSidebar"},"dsa-concepts/algorithms/README":{"id":"dsa-concepts/algorithms/README","title":"Algorithms in Data Structures and Algorithms (DSA)","description":"Overview of Algorithms","sidebar":"tutorialSidebar"},"dsa-concepts/basic-data-structures/README":{"id":"dsa-concepts/basic-data-structures/README","title":"Basic Data Structures","description":"This section provides an in-depth look at the foundational data structures essential for programming and problem-solving. Here, you\'ll find detailed descriptions, operations, examples, and practice questions for each structure.","sidebar":"tutorialSidebar"},"dsa-concepts/binary-search/README":{"id":"dsa-concepts/binary-search/README","title":"Binary Search","description":"Overview","sidebar":"tutorialSidebar"},"dsa-concepts/bit-manipulation/README":{"id":"dsa-concepts/bit-manipulation/README","title":"README","description":"https-how-to-use-bit-manipulation-to-solve-problems-easily-and-efficiently/","sidebar":"tutorialSidebar"},"dsa-concepts/introduction-to-dsa/README":{"id":"dsa-concepts/introduction-to-dsa/README","title":"Introduction to Data Structures and Algorithms (DSA)","description":"Overview","sidebar":"tutorialSidebar"},"dsa-concepts/linked-list/README":{"id":"dsa-concepts/linked-list/README","title":"README","description":"https://leetcode.com/discuss/post/1800120/become-master-in-linked-list-by-hi-malik-qvdr/","sidebar":"tutorialSidebar"},"dsa-concepts/problem-solving-patterns/README":{"id":"dsa-concepts/problem-solving-patterns/README","title":"Problem Solving Patterns","description":"Problem-solving patterns are essential techniques that can help simplify complex problems and make them easier to solve. Understanding these patterns can significantly enhance your ability to tackle a wide range of algorithmic challenges. Below are some common problem-solving patterns, along with detailed descriptions, examples, and practice questions from LeetCode and Codeforces.","sidebar":"tutorialSidebar"},"dsa-concepts/README":{"id":"dsa-concepts/README","title":"DSA Concepts","description":"Welcome to the DSA Concepts project! This repository provides a comprehensive overview of Data Structures and Algorithms (DSA), designed to help you build a strong foundation in these essential topics. Each section is broken down into individual README files that delve into specific areas of DSA, complete with detailed descriptions, examples, and practice questions sourced from platforms like LeetCode and Codeforces.","sidebar":"tutorialSidebar"},"dsa-key-pattern/Backtracking":{"id":"dsa-key-pattern/Backtracking","title":"Backtracking","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Bitwise-XOR":{"id":"dsa-key-pattern/Bitwise-XOR","title":"Bitwise XOR","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Breadth-First-Search":{"id":"dsa-key-pattern/Breadth-First-Search","title":"Breadth First Search (BFS)","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Cyclic-Sort":{"id":"dsa-key-pattern/Cyclic-Sort","title":"Cyclic Sort (Index-Based)","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Depth-First-Search":{"id":"dsa-key-pattern/Depth-First-Search","title":"Depth First Search (DFS)","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Design-Data-Structure":{"id":"dsa-key-pattern/Design-Data-Structure","title":"Design Data Structure","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/dsa-key-pattern":{"id":"dsa-key-pattern/dsa-key-pattern","title":"Data Structures and Algorithms Pattern Guide","description":"A comprehensive collection of algorithmic patterns and techniques for coding interviews and competitive programming, organized into separate folders for easy navigation.","sidebar":"tutorialSidebar"},"dsa-key-pattern/Dynamic-Programming":{"id":"dsa-key-pattern/Dynamic-Programming","title":"Dynamic Programming","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Fast-and-Slow-Pointer":{"id":"dsa-key-pattern/Fast-and-Slow-Pointer","title":"Fast and Slow Pointer","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Graphs":{"id":"dsa-key-pattern/Graphs","title":"Graphs","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Greedy":{"id":"dsa-key-pattern/Greedy","title":"Greedy","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/K-way-Merge":{"id":"dsa-key-pattern/K-way-Merge","title":"K-way Merge","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Matrix-Manipulation":{"id":"dsa-key-pattern/Matrix-Manipulation","title":"Matrix Manipulation","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Modified-Binary-Search":{"id":"dsa-key-pattern/Modified-Binary-Search","title":"Modified Binary Search","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Monotonic-Stack":{"id":"dsa-key-pattern/Monotonic-Stack","title":"Monotonic Stack","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Overlapping-Intervals":{"id":"dsa-key-pattern/Overlapping-Intervals","title":"Overlapping Intervals","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Prefix-Sum":{"id":"dsa-key-pattern/Prefix-Sum","title":"Prefix Sum","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Reversal-of-Linked-List":{"id":"dsa-key-pattern/Reversal-of-Linked-List","title":"Reversal of Linked List (In-place)","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Sliding-Window":{"id":"dsa-key-pattern/Sliding-Window","title":"Sliding Window","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Top-K-Elements":{"id":"dsa-key-pattern/Top-K-Elements","title":"Top \'K\' Elements","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Trees":{"id":"dsa-key-pattern/Trees","title":"Trees","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Two-Heaps":{"id":"dsa-key-pattern/Two-Heaps","title":"Two Heaps","description":"Description","sidebar":"tutorialSidebar"},"dsa-key-pattern/Two-Pointers":{"id":"dsa-key-pattern/Two-Pointers","title":"Two Pointers","description":"Description","sidebar":"tutorialSidebar"},"functional-programming/function-and-composition/README":{"id":"functional-programming/function-and-composition/README","title":"\ud83d\udd04 Function Composition & Higher-Order Functions","description":"Master the art of combining simple functions to create powerful, reusable abstractions","sidebar":"tutorialSidebar"},"functional-programming/functor-functions/README":{"id":"functional-programming/functor-functions/README","title":"\ud83c\udfad Functor Functions & Mappable Structures","description":"Understanding functors: containers that can be mapped over while preserving structure","sidebar":"tutorialSidebar"},"functional-programming/GETTING_STARTED":{"id":"functional-programming/GETTING_STARTED","title":"\ud83d\ude80 Functional Programming - Quick Start Guide","description":"How to Use This Guide","sidebar":"tutorialSidebar"},"functional-programming/monads/README":{"id":"functional-programming/monads/README","title":"\ud83c\udfd7\ufe0f Monads: Advanced Functional Patterns","description":"Master monads: the most powerful abstraction in functional programming for handling context and chaining operations","sidebar":"tutorialSidebar"},"functional-programming/pure-function-and-side-effect/README":{"id":"functional-programming/pure-function-and-side-effect/README","title":"\ud83c\udfaf Pure Functions and Side Effects","description":"The foundation of functional programming: understanding and implementing pure functions while eliminating side effects","sidebar":"tutorialSidebar"},"functional-programming/referential-programming/README":{"id":"functional-programming/referential-programming/README","title":"\ud83d\udd12 Referential Transparency & Mathematical Foundations","description":"Understanding the mathematical foundations that make functional programming powerful and predictable","sidebar":"tutorialSidebar"},"javascript/array-methods":{"id":"javascript/array-methods","title":"JavaScript Array Methods","description":"Essential Array Operations","sidebar":"tutorialSidebar"},"javascript/array-patterns":{"id":"javascript/array-patterns","title":"Array Pattern","description":"Some of the popular array pattern used are below :-","sidebar":"tutorialSidebar"},"javascript/array-properties":{"id":"javascript/array-properties","title":"Array Properties","description":"Array.length","sidebar":"tutorialSidebar"},"javascript/arrays":{"id":"javascript/arrays","title":"Array","description":"The array is a special type of identifier which can hold collections of variables.","sidebar":"tutorialSidebar"},"javascript/async-await":{"id":"javascript/async-await","title":"Async & Await","description":"What is Async/Await?","sidebar":"tutorialSidebar"},"javascript/async-await-enhanced":{"id":"javascript/async-await-enhanced","title":"\u23f0 Async/Await - Complete Guide","description":"Master modern asynchronous JavaScript with clean, readable syntax","sidebar":"tutorialSidebar"},"javascript/asynchronous":{"id":"javascript/asynchronous","title":"What is Asynchronous?","description":"1. Asynchronous code is better for performance.","sidebar":"tutorialSidebar"},"javascript/destructuring":{"id":"javascript/destructuring","title":"JavaScript Destructuring","description":"What is Destructuring?","sidebar":"tutorialSidebar"},"javascript/document-object-model":{"id":"javascript/document-object-model","title":"\ud83c\udf10 Document Object Model (DOM) - Complete Guide","description":"Master DOM manipulation for dynamic web applications","sidebar":"tutorialSidebar"},"javascript/ENHANCEMENT_SUMMARY":{"id":"javascript/ENHANCEMENT_SUMMARY","title":"\ud83d\udcda JavaScript Learning Guide - Enhancement Summary","description":"\ud83c\udfaf Major Improvements Completed","sidebar":"tutorialSidebar"},"javascript/error-handling":{"id":"javascript/error-handling","title":"Error Handling","description":"Error in code can occur while executions or runtime, even if our code is free from syntax and compile-time error.JavaScript like other languages support handling such errors.","sidebar":"tutorialSidebar"},"javascript/event-handling":{"id":"javascript/event-handling","title":"Event Handling","description":"An event is basically an action or set of actions. To perform a task/action, we need to accomplish a set of instructions specific to that task. JavaScript has a set of inbuilt events and also allows programmers to define custom events.","sidebar":"tutorialSidebar"},"javascript/flow-of-control":{"id":"javascript/flow-of-control","title":"Flow Control in JavaScript","description":"Flow control in JavaScript allows programmers to control the execution of code based on specific conditions. The main control structures are if...else, switch, and conditional operators.","sidebar":"tutorialSidebar"},"javascript/function-callback":{"id":"javascript/function-callback","title":"function-callback","description":"Callback","sidebar":"tutorialSidebar"},"javascript/function-closure":{"id":"javascript/function-closure","title":"JavaScript Closures","description":"What is a Closure?","sidebar":"tutorialSidebar"},"javascript/function-iife":{"id":"javascript/function-iife","title":"IIFE (Immediately Invoked Function Expression)","description":"IIFE is a function expression that is called an Immediately Invoked Function Expression, i.e., a function which is executed immediately after it\'s created.","sidebar":"tutorialSidebar"},"javascript/function-lambda":{"id":"javascript/function-lambda","title":"LAMBDA","description":"LAMBDA expressions reduce the structure of functions to the most important pieces.","sidebar":"tutorialSidebar"},"javascript/function-memoization":{"id":"javascript/function-memoization","title":"Memoization","description":"Caching the value that a function return.","sidebar":"tutorialSidebar"},"javascript/function-recursion":{"id":"javascript/function-recursion","title":"Recursion in JavaScript","description":"Recursion is a programming pattern where a function calls itself to solve a problem by breaking it down into smaller, similar sub-problems. Each recursive function must have a base case (termination condition) and a recursive case.","sidebar":"tutorialSidebar"},"javascript/function-types":{"id":"javascript/function-types","title":"JavaScript Function Types","description":"Function Arity","sidebar":"tutorialSidebar"},"javascript/history":{"id":"javascript/history","title":"\ud83d\udcda Chapter 1: The Complete History of JavaScript","description":"\ud83d\ude80 How JavaScript Started","sidebar":"tutorialSidebar"},"javascript/hoisting":{"id":"javascript/hoisting","title":"JavaScript Hoisting","description":"What is Hoisting?","sidebar":"tutorialSidebar"},"javascript/how-browsers-load-webpages":{"id":"javascript/how-browsers-load-webpages","title":"How Browsers Load Webpages - Complete Guide","description":"A comprehensive guide to understanding browser rendering processes, performance optimization, and modern web development practices.","sidebar":"tutorialSidebar"},"javascript/import-and-export":{"id":"javascript/import-and-export","title":"import-and-export","description":"CHAPTER 40 | import & export [ ES 6 ]","sidebar":"tutorialSidebar"},"javascript/iterators-and-generators":{"id":"javascript/iterators-and-generators","title":"Iterators & Generators","description":"","sidebar":"tutorialSidebar"},"javascript/javascript-engine-basic-unit":{"id":"javascript/javascript-engine-basic-unit","title":"Unit of JavaScript Compiler","description":"Parser","sidebar":"tutorialSidebar"},"javascript/js-best-practices":{"id":"javascript/js-best-practices","title":"\ud83d\ude80 Modern JavaScript Best Practices & Performance Guide","description":"A comprehensive guide to writing clean, efficient, and maintainable JavaScript code in 2025","sidebar":"tutorialSidebar"},"javascript/keyword":{"id":"javascript/keyword","title":"\ud83d\udd11 Chapter 3: Keywords and Identifiers in JavaScript","description":"\ud83d\udcdd Understanding Identifiers","sidebar":"tutorialSidebar"},"javascript/loops":{"id":"javascript/loops","title":"Loop","description":"When we want to repeat the same code over different values, we generally use a programming constructs loop.","sidebar":"tutorialSidebar"},"javascript/modern-js-patterns":{"id":"javascript/modern-js-patterns","title":"\ud83d\udd25 Modern JavaScript Patterns & Advanced Techniques","description":"Advanced patterns for professional JavaScript development in 2025","sidebar":"tutorialSidebar"},"javascript/modular-javascript":{"id":"javascript/modular-javascript","title":"Modular JavaScript [ ES 6 ]","description":"Modular programming is pattern of javaScript with Three formats for writing modular JavaScript code","sidebar":"tutorialSidebar"},"javascript/modular-javascript-enhanced":{"id":"javascript/modular-javascript-enhanced","title":"\ud83d\udce6 JavaScript Modules - Complete Guide (ES6+)","description":"Master modular programming for scalable and maintainable JavaScript applications","sidebar":"tutorialSidebar"},"javascript/object-composition":{"id":"javascript/object-composition","title":"Object Composition in JavaScript","description":"Object composition is a powerful way to build complex objects by combining smaller, focused objects or behaviors. It\'s often preferred over inheritance for its flexibility and reduced coupling.","sidebar":"tutorialSidebar"},"javascript/operators-and-operands":{"id":"javascript/operators-and-operands","title":"OPERATORS & OPERANDS","description":"Operators are the type of tokens which perform an operation on the operands.","sidebar":"tutorialSidebar"},"javascript/promises-enhanced":{"id":"javascript/promises-enhanced","title":"\ud83e\udd1d JavaScript Promises - Complete Guide","description":"Master asynchronous programming with Promises for cleaner, more maintainable code","sidebar":"tutorialSidebar"},"javascript/quick-reference":{"id":"javascript/quick-reference","title":"\ud83d\udcda JavaScript Quick Reference & Improvement Summary","description":"Your roadmap to modern JavaScript mastery","sidebar":"tutorialSidebar"},"javascript/quick-reference-cheatsheet":{"id":"javascript/quick-reference-cheatsheet","title":"\ud83d\ude80 JavaScript Quick Reference Cheatsheet","description":"\ud83d\udcda Variables & Data Types","sidebar":"tutorialSidebar"},"javascript/README":{"id":"javascript/README","title":"\ud83d\ude80 Complete JavaScript Mastery Guide","description":"From Zero to Hero - Training, Learning & Interview Success","sidebar":"tutorialSidebar"},"javascript/scope":{"id":"javascript/scope","title":"JavaScript Scope","description":"What is Scope?","sidebar":"tutorialSidebar"},"javascript/spread-operator":{"id":"javascript/spread-operator","title":"Spread [es6]","description":"","sidebar":"tutorialSidebar"},"javascript/symbol":{"id":"javascript/symbol","title":"Symbol","description":"","sidebar":"tutorialSidebar"},"javascript/template-literals":{"id":"javascript/template-literals","title":"Template Literals [es6]","description":"The template is termed as a certain predefined format and literals are referred to as a value which you don\u2019t want to mutate while displaying or showing. Backtick Operator","sidebar":"tutorialSidebar"},"javascript/testing-guide":{"id":"javascript/testing-guide","title":"\ud83e\uddea JavaScript Testing Mastery Guide","description":"Comprehensive testing strategies for robust JavaScript applications","sidebar":"tutorialSidebar"},"javascript/Transpiler":{"id":"javascript/Transpiler","title":"Compiler","description":"convert high level human readable into lower level machine code.","sidebar":"tutorialSidebar"},"javascript/type-casting-and-coercion":{"id":"javascript/type-casting-and-coercion","title":"Type Casting and Coercion","description":"Type Coercion (implicit type conversion) happens when a value is being converted to any other types using certain predefined rules","sidebar":"tutorialSidebar"},"javascript/types-of-identifiers":{"id":"javascript/types-of-identifiers","title":"CHAPTER 1 | Data TYPES OR TYPES OF IDENTIFIERS","description":"The var keyword is used to define or declare a variable identifier.","sidebar":"tutorialSidebar"},"javascript/use-strict":{"id":"javascript/use-strict","title":"use strict","description":"The JavaScript directive \\"use strict\\" enables strict mode. Strict mode makes JavaScript code safer and","sidebar":"tutorialSidebar"},"javascript/variables-var-let-const":{"id":"javascript/variables-var-let-const","title":"var, let & const","description":"Variable Declaration Keywords","sidebar":"tutorialSidebar"},"SOLID-Design-principles/README":{"id":"SOLID-Design-principles/README","title":"\ud83c\udfdb\ufe0f SOLID Design Principles","description":"The foundation of maintainable and scalable object-oriented design","sidebar":"tutorialSidebar"}}}}')}}]);