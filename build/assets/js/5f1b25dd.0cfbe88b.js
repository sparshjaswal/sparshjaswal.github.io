"use strict";(globalThis.webpackChunka=globalThis.webpackChunka||[]).push([[3140],{2793:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>t});const o=JSON.parse('{"id":"javascript/scope","title":"JavaScript Scope","description":"What is Scope?","source":"@site/docs/javascript/scope.md","sourceDirName":"javascript","slug":"/javascript/scope","permalink":"/docs/javascript/scope","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udcda JavaScript Quick Reference & Improvement Summary","permalink":"/docs/javascript/quick-reference"},"next":{"title":"Spread [es6]","permalink":"/docs/javascript/spread-operator"}}');var s=c(4848),r=c(8453);const i={},l="JavaScript Scope",a={},t=[{value:"What is Scope?",id:"what-is-scope",level:2},{value:"Types of Scope",id:"types-of-scope",level:2},{value:"1. Global Scope",id:"1-global-scope",level:3},{value:"2. Function Scope",id:"2-function-scope",level:3},{value:"3. Block Scope",id:"3-block-scope",level:3},{value:"Scope Chain",id:"scope-chain",level:2},{value:"Key Rules",id:"key-rules",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"javascript-scope",children:"JavaScript Scope"})}),"\n",(0,s.jsx)(n.h2,{id:"what-is-scope",children:"What is Scope?"}),"\n",(0,s.jsxs)(n.p,{children:["Scope determines where variables can be accessed in your code. JavaScript uses ",(0,s.jsx)(n.strong,{children:"lexical scoping"})," - the position where variables are declared determines their accessibility."]}),"\n",(0,s.jsx)(n.h2,{id:"types-of-scope",children:"Types of Scope"}),"\n",(0,s.jsx)(n.h3,{id:"1-global-scope",children:"1. Global Scope"}),"\n",(0,s.jsx)(n.p,{children:"Variables declared outside any function or block:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'var globalVar = "I\'m global";\nlet globalLet = "Also global";\n\nfunction test() {\n    console.log(globalVar); // Accessible everywhere\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-function-scope",children:"2. Function Scope"}),"\n",(0,s.jsx)(n.p,{children:"Variables declared inside a function:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'function myFunction() {\n    var functionScoped = "Only inside function";\n    console.log(functionScoped); // Works\n}\n\n// console.log(functionScoped); // Error: not defined\n'})}),"\n",(0,s.jsx)(n.h3,{id:"3-block-scope",children:"3. Block Scope"}),"\n",(0,s.jsxs)(n.p,{children:["Variables declared inside ",(0,s.jsx)(n.code,{children:"{}"})," blocks (let/const only):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'if (true) {\n    let blockScoped = "Only in this block";\n    var functionScoped = "Available in entire function";\n}\n\n// console.log(blockScoped); // Error: not defined\nconsole.log(functionScoped); // Works (var ignores block scope)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"scope-chain",children:"Scope Chain"}),"\n",(0,s.jsx)(n.p,{children:"JavaScript looks for variables from inner to outer scope:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'var x = "global";\n\nfunction outer() {\n    var x = "outer";\n    \n    function inner() {\n        var x = "inner";\n        console.log(x); // "inner" (finds closest scope)\n    }\n    \n    inner();\n    console.log(x); // "outer"\n}\n\nouter();\nconsole.log(x); // "global"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"key-rules",children:"Key Rules"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Inner scopes can access outer scope variables"}),"\n",(0,s.jsx)(n.li,{children:"Outer scopes cannot access inner scope variables"}),"\n",(0,s.jsx)(n.li,{children:"Variables are searched from innermost to outermost scope"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"var"})," is function-scoped, ",(0,s.jsx)(n.code,{children:"let"}),"/",(0,s.jsx)(n.code,{children:"const"})," are block-scoped"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,c)=>{c.d(n,{R:()=>i,x:()=>l});var o=c(6540);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);