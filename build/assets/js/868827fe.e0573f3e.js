"use strict";(globalThis.webpackChunka=globalThis.webpackChunka||[]).push([[7883],{1479:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"javascript/variables-var-let-const","title":"var, let & const","description":"Variable Declaration Keywords","source":"@site/docs/javascript/variables-var-let-const.md","sourceDirName":"javascript","slug":"/javascript/variables-var-let-const","permalink":"/docs/javascript/variables-var-let-const","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"use strict","permalink":"/docs/javascript/use-strict"}}');var l=r(4848),i=r(8453);const s={},a="var, let & const",o={},c=[{value:"Variable Declaration Keywords",id:"variable-declaration-keywords",level:2},{value:"var (ES5)",id:"var-es5",level:3},{value:"let (ES6)",id:"let-es6",level:3},{value:"const (ES6)",id:"const-es6",level:3},{value:"Important Differences",id:"important-differences",level:2},{value:"Scope Comparison",id:"scope-comparison",level:3},{value:"Hoisting Behavior",id:"hoisting-behavior",level:3},{value:"Object/Array with const",id:"objectarray-with-const",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Quick Reference Table",id:"quick-reference-table",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"var-let--const",children:"var, let & const"})}),"\n",(0,l.jsx)(n.h2,{id:"variable-declaration-keywords",children:"Variable Declaration Keywords"}),"\n",(0,l.jsx)(n.h3,{id:"var-es5",children:"var (ES5)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Function-scoped or globally-scoped"}),"\n",(0,l.jsx)(n.li,{children:"Can be redeclared and updated"}),"\n",(0,l.jsxs)(n.li,{children:["Hoisted with ",(0,l.jsx)(n.code,{children:"undefined"})," value"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:'var name = "John";\nvar name = "Jane"; // Redeclaration allowed\nname = "Bob"; // Update allowed\n\nfunction example() {\n    var x = 1;\n    if (true) {\n        var x = 2; // Same variable\n        console.log(x); // 2\n    }\n    console.log(x); // 2\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"let-es6",children:"let (ES6)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Block-scoped"}),"\n",(0,l.jsx)(n.li,{children:"Cannot be redeclared in same scope"}),"\n",(0,l.jsx)(n.li,{children:"Can be updated"}),"\n",(0,l.jsx)(n.li,{children:"Hoisted but not initialized (Temporal Dead Zone)"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"let age = 25;\n// let age = 30; // Error: Cannot redeclare\nage = 30; // Update allowed\n\nfunction example() {\n    let y = 1;\n    if (true) {\n        let y = 2; // Different variable (block scope)\n        console.log(y); // 2\n    }\n    console.log(y); // 1\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"const-es6",children:"const (ES6)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Block-scoped"}),"\n",(0,l.jsx)(n.li,{children:"Cannot be redeclared or updated"}),"\n",(0,l.jsx)(n.li,{children:"Must be initialized at declaration"}),"\n",(0,l.jsx)(n.li,{children:"Hoisted but not initialized (Temporal Dead Zone)"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:"const PI = 3.14159;\n// const PI = 3.14; // Error: Cannot redeclare\n// PI = 3.14; // Error: Cannot update\n\n// Must initialize\n// const value; // Error: Missing initializer\n"})}),"\n",(0,l.jsx)(n.h2,{id:"important-differences",children:"Important Differences"}),"\n",(0,l.jsx)(n.h3,{id:"scope-comparison",children:"Scope Comparison"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:'function scopeExample() {\n    var varVariable = "var";\n    let letVariable = "let";\n    const constVariable = "const";\n    \n    if (true) {\n        var varInBlock = "var in block";\n        let letInBlock = "let in block";\n        const constInBlock = "const in block";\n    }\n    \n    console.log(varInBlock); // "var in block" - accessible\n    // console.log(letInBlock); // Error: not defined\n    // console.log(constInBlock); // Error: not defined\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"hoisting-behavior",children:"Hoisting Behavior"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:'// var hoisting\nconsole.log(hoistedVar); // undefined (not error)\nvar hoistedVar = "I\'m hoisted";\n\n// let/const hoisting (Temporal Dead Zone)\n// console.log(hoistedLet); // Error: Cannot access before initialization\nlet hoistedLet = "I\'m in TDZ";\n\n// console.log(hoistedConst); // Error: Cannot access before initialization\nconst hoistedConst = "I\'m in TDZ";\n'})}),"\n",(0,l.jsx)(n.h3,{id:"objectarray-with-const",children:"Object/Array with const"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-javascript",children:'// const prevents reassignment, not mutation\nconst arr = [1, 2, 3];\narr.push(4); // Allowed - mutating content\nconsole.log(arr); // [1, 2, 3, 4]\n// arr = [5, 6, 7]; // Error: Cannot reassign\n\nconst obj = { name: "John" };\nobj.name = "Jane"; // Allowed - mutating property\nobj.age = 25; // Allowed - adding property\nconsole.log(obj); // { name: "Jane", age: 25 }\n// obj = {}; // Error: Cannot reassign\n'})}),"\n",(0,l.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Use ",(0,l.jsx)(n.code,{children:"const"})," by default"]}),"\n",(0,l.jsxs)(n.li,{children:["Use ",(0,l.jsx)(n.code,{children:"let"})," when you need to reassign the variable"]}),"\n",(0,l.jsxs)(n.li,{children:["Avoid ",(0,l.jsx)(n.code,{children:"var"})," in modern JavaScript"]}),"\n",(0,l.jsx)(n.li,{children:"Always declare variables at the top of their scope"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"quick-reference-table",children:"Quick Reference Table"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Feature"}),(0,l.jsx)(n.th,{children:"var"}),(0,l.jsx)(n.th,{children:"let"}),(0,l.jsx)(n.th,{children:"const"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Scope"}),(0,l.jsx)(n.td,{children:"Function/Global"}),(0,l.jsx)(n.td,{children:"Block"}),(0,l.jsx)(n.td,{children:"Block"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Redeclare"}),(0,l.jsx)(n.td,{children:"\u2705"}),(0,l.jsx)(n.td,{children:"\u274c"}),(0,l.jsx)(n.td,{children:"\u274c"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Update"}),(0,l.jsx)(n.td,{children:"\u2705"}),(0,l.jsx)(n.td,{children:"\u2705"}),(0,l.jsx)(n.td,{children:"\u274c"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Hoisting"}),(0,l.jsx)(n.td,{children:"\u2705 (undefined)"}),(0,l.jsx)(n.td,{children:"\u2705 (TDZ)"}),(0,l.jsx)(n.td,{children:"\u2705 (TDZ)"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Initialize"}),(0,l.jsx)(n.td,{children:"Optional"}),(0,l.jsx)(n.td,{children:"Optional"}),(0,l.jsx)(n.td,{children:"Required"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var t=r(6540);const l={},i=t.createContext(l);function s(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);