"use strict";(globalThis.webpackChunka=globalThis.webpackChunka||[]).push([[8804],{307:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"dsa-key-pattern/Bitwise-XOR","title":"Bitwise XOR","description":"Description","source":"@site/docs/dsa-key-pattern/13-Bitwise-XOR.md","sourceDirName":"dsa-key-pattern","slug":"/dsa-key-pattern/Bitwise-XOR","permalink":"/docs/dsa-key-pattern/Bitwise-XOR","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Modified Binary Search","permalink":"/docs/dsa-key-pattern/Modified-Binary-Search"},"next":{"title":"Top \'K\' Elements","permalink":"/docs/dsa-key-pattern/Top-K-Elements"}}');var r=n(4848),l=n(8453);const t={},c="Bitwise XOR",o={},a=[{value:"Description",id:"description",level:2},{value:"Time Complexity",id:"time-complexity",level:2},{value:"Space Complexity",id:"space-complexity",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Key Problems",id:"key-problems",level:2},{value:"When to Use",id:"when-to-use",level:2},{value:"Pattern Recognition",id:"pattern-recognition",level:2},{value:"XOR Properties &amp; Tricks",id:"xor-properties--tricks",level:2},{value:"Basic Properties",id:"basic-properties",level:3},{value:"Common Techniques",id:"common-techniques",level:3},{value:"Advanced Applications",id:"advanced-applications",level:3}];function d(e){const i={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"bitwise-xor",children:"Bitwise XOR"})}),"\n",(0,r.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(i.p,{children:"XOR is a powerful bitwise operator that can solve problems like finding single numbers or efficiently pairing elements."}),"\n",(0,r.jsx)(i.h2,{id:"time-complexity",children:"Time Complexity"}),"\n",(0,r.jsx)(i.p,{children:"O(n)"}),"\n",(0,r.jsx)(i.h2,{id:"space-complexity",children:"Space Complexity"}),"\n",(0,r.jsx)(i.p,{children:"O(1)"}),"\n",(0,r.jsx)(i.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"XOR Properties"}),": a \u2295 a = 0, a \u2295 0 = a, XOR is commutative and associative"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Cancel Out Pairs"}),": XOR of identical numbers equals 0"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Bit Manipulation"}),": Work with individual bits for efficient solutions"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Toggle Operation"}),": XOR with 1 flips the bit"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"key-problems",children:"Key Problems"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Missing Number"}),"\n",(0,r.jsx)(i.li,{children:"Single Number II"}),"\n",(0,r.jsx)(i.li,{children:"Single Number III"}),"\n",(0,r.jsx)(i.li,{children:"Find the Original array of Prefix XOR"}),"\n",(0,r.jsx)(i.li,{children:"XOR Queries of a Subarray"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Finding single/unique elements when others appear in pairs"}),"\n",(0,r.jsx)(i.li,{children:"Problems involving bit manipulation"}),"\n",(0,r.jsx)(i.li,{children:"Canceling out paired elements efficiently"}),"\n",(0,r.jsx)(i.li,{children:"Toggle operations on bits"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"pattern-recognition",children:"Pattern Recognition"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:'"Every element appears twice except one"'}),"\n",(0,r.jsx)(i.li,{children:'"Find missing number"'}),"\n",(0,r.jsx)(i.li,{children:'"Toggle bits based on condition"'}),"\n",(0,r.jsx)(i.li,{children:'"XOR operations on subarrays"'}),"\n",(0,r.jsx)(i.li,{children:'"Find unique elements"'}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"xor-properties--tricks",children:"XOR Properties & Tricks"}),"\n",(0,r.jsx)(i.h3,{id:"basic-properties",children:"Basic Properties"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"a \u2295 a = 0 (self XOR is 0)"}),"\n",(0,r.jsx)(i.li,{children:"a \u2295 0 = a (XOR with 0 is identity)"}),"\n",(0,r.jsx)(i.li,{children:"XOR is commutative: a \u2295 b = b \u2295 a"}),"\n",(0,r.jsx)(i.li,{children:"XOR is associative: (a \u2295 b) \u2295 c = a \u2295 (b \u2295 c)"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"common-techniques",children:"Common Techniques"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Find Single Number"}),": XOR all elements, pairs cancel out"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Missing Number"}),": XOR all numbers and indices"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Bit Flipping"}),": XOR with mask to flip specific bits"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Two Single Numbers"}),": Use XOR and bit manipulation to separate"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"advanced-applications",children:"Advanced Applications"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Prefix XOR"}),": Similar to prefix sum but with XOR"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"XOR Queries"}),": Answer range XOR queries efficiently"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Bit Manipulation Tricks"}),": Check power of 2, count set bits, etc."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>c});var s=n(6540);const r={},l=s.createContext(r);function t(e){const i=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:i},e.children)}}}]);