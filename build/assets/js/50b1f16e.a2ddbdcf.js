"use strict";(globalThis.webpackChunka=globalThis.webpackChunka||[]).push([[3031],{1567:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"javascript/type-casting-and-coercion","title":"Type Casting and Coercion","description":"Type Coercion (implicit type conversion) happens when a value is being converted to any other types using certain predefined rules","source":"@site/docs/javascript/type-casting-and-coercion.md","sourceDirName":"javascript","slug":"/javascript/type-casting-and-coercion","permalink":"/docs/javascript/type-casting-and-coercion","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83e\uddea JavaScript Testing Mastery Guide","permalink":"/docs/javascript/testing-guide"},"next":{"title":"CHAPTER 1 | Data TYPES OR TYPES OF IDENTIFIERS","permalink":"/docs/javascript/types-of-identifiers"}}');var a=o(4848),t=o(8453);const r={},i="Type Casting and Coercion",c={},l=[{value:"1. is it True or False?",id:"1-is-it-true-or-false",level:2},{value:"1. How to evaluate the above condition?",id:"1-how-to-evaluate-the-above-condition",level:2},{value:"2",id:"2",level:2},{value:"3",id:"3",level:2},{value:"4",id:"4",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"type-casting-and-coercion",children:"Type Casting and Coercion"})}),"\n",(0,a.jsx)(n.p,{children:"Type Coercion (implicit type conversion) happens when a value is being converted to any other types using certain predefined rules"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"var sum = '1' + 5;\nconsole.log(sum)\nconsole.log(typeof sum)\n\nvar minus = '1' - 5;\nconsole.log(minus)\nconsole.log(typeof minus)\n\nvar minus = 'one' - 5;\nconsole.log(minus)\nconsole.log(typeof minus)\n\nconsole.log(0 == false)   //true\nconsole.log(1 == true)   //true\nconsole.log(undefined == false) //false\nconsole.log(null == false) //false\nconsole.log(\"\" == false) //true\nconsole.log(undefined == null) //true only case otherwise false\n\nconst a = {}\nconst b = {name:'b'}\nconst c = {name:'c'}\na[b] = 200; //coercion b to string \na[c] = 400; //coercion c to string\nconsole.log(a[b])\nconsole.log(a[c])\n"})}),"\n",(0,a.jsx)(n.p,{children:"Typecasting (explicit type conversion) when we have a value of certain type and we want to convert those values to certain other types."}),"\n",(0,a.jsx)(n.h2,{id:"1-is-it-true-or-false",children:"1. is it True or False?"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"console.log(900.9 === 300.3 * 3)\n"})}),"\n",(0,a.jsx)(n.p,{children:"All numbers are IEEE 754 floating-point numbers."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"\u2154 => 0.66666667\n"})}),"\n",(0,a.jsx)(n.p,{children:"Since all numbers are binary encoded some decimal numbers cannot be perfectly expressed as a decimal number. So we use repeating numbers and once numbers hit memory delimiter the last digit must be rounded either up or down."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"console.log(300.3 * 3) // results 900.9000000000001\n"})}),"\n",(0,a.jsx)(n.h2,{id:"1-how-to-evaluate-the-above-condition",children:"1. How to evaluate the above condition?"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"console.log((300.3 * 3).toFixed(2)) // will return a string Or convert this string into a number we can use\nconsole.log(Number((300.3 * 3).toFixed(2))) // 900.9\n"})}),"\n",(0,a.jsx)(n.h2,{id:"2",children:"2"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"console.log((300.3 * 3).toPrecision(12)) // 900.900000000\nOr convert this string into a number we can use\nconsole.log(Number((300.3 * 3).toPrecision(12))) // 900.9\n"})}),"\n",(0,a.jsx)(n.h2,{id:"3",children:"3"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"console.log( ((300.3 * 10)*3) /10) // 900.9\n"})}),"\n",(0,a.jsx)(n.h2,{id:"4",children:"4"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"0.1 + 0.2 !== 0.3  is it True or False?\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const name1 = "sparsh";\nconst name2 = "sparsh";\n\nconsole.log(name1 == name2);\nconsole.log(name1 === name2);\n\nconst user1 = {\n  name: "sparsh",\n  age: 28,\n};\nconst user2 = {\n  name: "sparsh",\n  age: 28,\n};\n\nconsole.log(user1 == user2);\nconsole.log(user1 === user2);\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var s=o(6540);const a={},t=s.createContext(a);function r(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);