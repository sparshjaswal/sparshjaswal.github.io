"use strict";(globalThis.webpackChunka=globalThis.webpackChunka||[]).push([[5378],{8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},9422:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"dsa-key-pattern/Design-Data-Structure","title":"Design Data Structure","description":"Description","source":"@site/docs/dsa-key-pattern/22-Design-Data-Structure.md","sourceDirName":"dsa-key-pattern","slug":"/dsa-key-pattern/Design-Data-Structure","permalink":"/docs/dsa-key-pattern/Design-Data-Structure","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":22,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Greedy","permalink":"/docs/dsa-key-pattern/Greedy"},"next":{"title":"\ud83d\ude80 Functional Programming - Quick Start Guide","permalink":"/docs/functional-programming/GETTING_STARTED"}}');var t=i(4848),r=i(8453);const l={},c="Design Data Structure",a={},o=[{value:"Description",id:"description",level:2},{value:"Time Complexity",id:"time-complexity",level:2},{value:"Space Complexity",id:"space-complexity",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Key Problems",id:"key-problems",level:2},{value:"When to Use",id:"when-to-use",level:2},{value:"Pattern Recognition",id:"pattern-recognition",level:2},{value:"Design Principles",id:"design-principles",level:2},{value:"Single Responsibility",id:"single-responsibility",level:3},{value:"API Design",id:"api-design",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Caching Strategies",id:"caching-strategies",level:3},{value:"Common Patterns",id:"common-patterns",level:2}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"design-data-structure",children:"Design Data Structure"})}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Building custom data structures to efficiently handle specific operations, focusing on optimizing performance and resource management."}),"\n",(0,t.jsx)(n.h2,{id:"time-complexity",children:"Time Complexity"}),"\n",(0,t.jsx)(n.p,{children:"Varies by operation"}),"\n",(0,t.jsx)(n.h2,{id:"space-complexity",children:"Space Complexity"}),"\n",(0,t.jsx)(n.p,{children:"Varies by design"}),"\n",(0,t.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Interface Design"}),": Define clear API for data structure operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Trade-offs"}),": Balance between time complexity, space complexity, and implementation complexity"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Caching"}),": Store frequently accessed data for quick retrieval"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lazy Evaluation"}),": Defer computations until actually needed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Amortized Analysis"}),": Average performance over sequence of operations"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-problems",children:"Key Problems"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Design Twitter"}),"\n",(0,t.jsx)(n.li,{children:"Design Browser History"}),"\n",(0,t.jsx)(n.li,{children:"Design Circular Deque"}),"\n",(0,t.jsx)(n.li,{children:"Snapshot Array"}),"\n",(0,t.jsx)(n.li,{children:"LRU Cache"}),"\n",(0,t.jsx)(n.li,{children:"LFU Cache"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"When existing data structures don't meet requirements"}),"\n",(0,t.jsx)(n.li,{children:"Need to optimize specific operation patterns"}),"\n",(0,t.jsx)(n.li,{children:"Custom caching or storage requirements"}),"\n",(0,t.jsx)(n.li,{children:'Problems asking to "design" or "implement" a system'}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pattern-recognition",children:"Pattern Recognition"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'"Design a data structure that supports..."'}),"\n",(0,t.jsx)(n.li,{children:'"Implement a cache with..."'}),"\n",(0,t.jsx)(n.li,{children:'"Create a system that can..."'}),"\n",(0,t.jsx)(n.li,{children:'"Design API for..."'}),"\n",(0,t.jsx)(n.li,{children:"Custom requirements for specific operations"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"design-principles",children:"Design Principles"}),"\n",(0,t.jsx)(n.h3,{id:"single-responsibility",children:"Single Responsibility"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Each class/structure should have one clear purpose"}),"\n",(0,t.jsx)(n.li,{children:"Separate concerns into different components"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"api-design",children:"API Design"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep interfaces simple and intuitive"}),"\n",(0,t.jsx)(n.li,{children:"Consider what operations will be most frequent"}),"\n",(0,t.jsx)(n.li,{children:"Design for extensibility"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Identify bottleneck operations"}),"\n",(0,t.jsx)(n.li,{children:"Use appropriate data structures (hash tables, heaps, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Consider space-time trade-offs"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"caching-strategies",children:"Caching Strategies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LRU (Least Recently Used)"}),": Remove oldest accessed item"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"LFU (Least Frequently Used)"}),": Remove least frequently accessed item"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"TTL (Time To Live)"}),": Remove items after certain time"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hash Table + Doubly Linked List"}),": For LRU cache"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hash Table + Min/Max Heap"}),": For priority-based systems"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Trie + Hash Map"}),": For prefix-based searches"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stack/Queue combinations"}),": For undo/redo operations"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);