"use strict";(globalThis.webpackChunka=globalThis.webpackChunka||[]).push([[9779],{4021:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"javascript/array-methods","title":"JavaScript Array Methods","description":"Essential Array Operations","source":"@site/docs/javascript/array-methods.md","sourceDirName":"javascript","slug":"/javascript/array-methods","permalink":"/docs/javascript/array-methods","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Compiler","permalink":"/docs/javascript/Transpiler"},"next":{"title":"Array Pattern","permalink":"/docs/javascript/array-patterns"}}');var a=r(4848),s=r(8453);const i={},o="JavaScript Array Methods",c={},d=[{value:"Essential Array Operations",id:"essential-array-operations",level:2},{value:"Adding Elements",id:"adding-elements",level:3},{value:"Removing Elements",id:"removing-elements",level:3},{value:"Iteration Methods",id:"iteration-methods",level:3},{value:"Search Methods",id:"search-methods",level:3},{value:"Utility Methods",id:"utility-methods",level:3},{value:"Modern Array Methods",id:"modern-array-methods",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"javascript-array-methods",children:"JavaScript Array Methods"})}),"\n",(0,a.jsx)(n.h2,{id:"essential-array-operations",children:"Essential Array Operations"}),"\n",(0,a.jsx)(n.h3,{id:"adding-elements",children:"Adding Elements"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const arr = [1, 2, 3];\n\n// Add to end\narr.push(4); // [1, 2, 3, 4]\n\n// Add to beginning  \narr.unshift(0); // [0, 1, 2, 3, 4]\n\n// Add at specific position\narr.splice(2, 0, 'new'); // [0, 1, 'new', 2, 3, 4]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"removing-elements",children:"Removing Elements"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const arr = [1, 2, 3, 4, 5];\n\n// Remove from end\nconst last = arr.pop(); // returns 5, arr becomes [1, 2, 3, 4]\n\n// Remove from beginning\nconst first = arr.shift(); // returns 1, arr becomes [2, 3, 4]\n\n// Remove specific elements\narr.splice(1, 2); // removes 2 elements starting at index 1\n"})}),"\n",(0,a.jsx)(n.h3,{id:"iteration-methods",children:"Iteration Methods"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const numbers = [1, 2, 3, 4, 5];\n\n// forEach - execute function for each element\nnumbers.forEach(num => console.log(num * 2));\n\n// map - transform each element, return new array\nconst doubled = numbers.map(num => num * 2); // [2, 4, 6, 8, 10]\n\n// filter - return elements that meet condition\nconst evens = numbers.filter(num => num % 2 === 0); // [2, 4]\n\n// find - return first element that meets condition\nconst found = numbers.find(num => num > 3); // 4\n\n// reduce - accumulate values into single result\nconst sum = numbers.reduce((acc, num) => acc + num, 0); // 15\n"})}),"\n",(0,a.jsx)(n.h3,{id:"search-methods",children:"Search Methods"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const fruits = ['apple', 'banana', 'orange'];\n\n// Check if element exists\nfruits.includes('banana'); // true\n\n// Find index of element\nfruits.indexOf('orange'); // 2\n\n// Find index using condition\nfruits.findIndex(fruit => fruit.length > 5); // 1 (banana)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"utility-methods",children:"Utility Methods"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const arr = [3, 1, 4, 1, 5];\n\n// Sort array (modifies original)\narr.sort(); // [1, 1, 3, 4, 5]\n\n// Reverse array (modifies original)\narr.reverse(); // [5, 4, 3, 1, 1]\n\n// Join elements into string\narr.join('-'); // \"5-4-3-1-1\"\n\n// Get portion of array (doesn't modify original)\narr.slice(1, 3); // [4, 3]\n"})}),"\n",(0,a.jsx)(n.h2,{id:"modern-array-methods",children:"Modern Array Methods"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const users = [\n    { name: 'John', age: 25 },\n    { name: 'Jane', age: 30 },\n    { name: 'Bob', age: 20 }\n];\n\n// flatMap - map then flatten\nconst names = users.flatMap(user => [user.name]); // ['John', 'Jane', 'Bob']\n\n// some - check if any element meets condition\nconst hasAdult = users.some(user => user.age >= 18); // true\n\n// every - check if all elements meet condition\nconst allAdults = users.every(user => user.age >= 18); // true\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(6540);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);